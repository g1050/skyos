ELF 头：
  Magic：  7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  类别:                              ELF32
  数据:                              2 补码，小端序 (little endian)
  版本:                              1 (current)
  OS/ABI:                            UNIX - System V
  ABI 版本:                          0
  类型:                              EXEC (可执行文件)
  系统架构:                          Intel 80386
  版本:                              0x1
  入口点地址：              0x8048098
  程序头起点：              52 (bytes into file)
  Start of section headers:          620 (bytes into file)
  标志：             0x0
  本头的大小：       52 (字节)
  程序头大小：       32 (字节)
  Number of program headers:         2
  节头大小：         40 (字节)
  节头数量：         10
  字符串表索引节头： 9

节头：
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] .text             PROGBITS        08048080 000080 000007 00  AX  0   0 16
  #file1定义的section
  [ 2] file1data         PROGBITS        08048087 000087 000011 00   A  0   0  1
  [ 3] file1text         PROGBITS        08048098 000098 000018 00   A  0   0  1
  #file2定义的section
  [ 4] file2data         PROGBITS        080480b0 0000b0 000001 00   A  0   0  1
  [ 5] file2text         PROGBITS        080480b1 0000b1 000015 00   A  0   0  1
  #标准节名
  [ 6] .bss              NOBITS          080490c8 0000c8 000040 00  WA  0   0  4
  [ 7] .symtab           SYMTAB          00000000 0000c8 000110 10      8  12  4
  [ 8] .strtab           STRTAB          00000000 0001d8 000044 00      0   0  1
  [ 9] .shstrtab         STRTAB          00000000 00021c 00004e 00      0   0  1

Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  p (processor specific)

#segment
程序头：
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x000000 0x08048000 0x08048000 0x000c6 0x000c6 R E 0x1000
  LOAD           0x0000c8 0x080490c8 0x080490c8 0x00000 0x00040 RW  0x1000

 Section to Segment mapping:
  段节...
   #可读可执行
   00     .text file1data file1text file2data file2text 
   #数据段可读可写
   01     .bss 

#总结:section在程序中叫做节,编译器合并后叫segment,在汇编代码中section和segment关键字可以混合使用
